// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCareServicios.Data;

#nullable disable

namespace PetCareServicios.Migrations.Calificaciones
{
    [DbContext(typeof(CalificacionesDbContext))]
    partial class CalificacionesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetCareServicios.Models.Calificaciones.Calificacion", b =>
                {
                    b.Property<int>("CalificacionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CalificacionID"));

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<int>("CuidadorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCalificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("Puntuacion")
                        .HasColumnType("int");

                    b.HasKey("CalificacionID");

                    b.HasIndex("ClienteID")
                        .HasDatabaseName("IX_Calificaciones_ClienteID");

                    b.HasIndex("CuidadorID")
                        .HasDatabaseName("IX_Calificaciones_CuidadorID");

                    b.HasIndex("FechaCalificacion")
                        .HasDatabaseName("IX_Calificaciones_FechaCalificacion");

                    b.HasIndex("CuidadorID", "ClienteID")
                        .IsUnique()
                        .HasDatabaseName("IX_Calificaciones_CuidadorID_ClienteID_Unique");

                    b.HasIndex("CuidadorID", "FechaCalificacion")
                        .HasDatabaseName("IX_Calificaciones_CuidadorID_Fecha");

                    b.ToTable("Calificaciones", t =>
                        {
                            t.HasCheckConstraint("CHK_Puntuacion", "Puntuacion BETWEEN 1 AND 5");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
