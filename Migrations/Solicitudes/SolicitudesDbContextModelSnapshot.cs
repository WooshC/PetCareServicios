// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCareServicios.Data;

#nullable disable

namespace PetCareServicios.Migrations.Solicitudes
{
    [DbContext(typeof(SolicitudesDbContext))]
    partial class SolicitudesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetCareServicios.Models.Solicitudes.Solicitud", b =>
                {
                    b.Property<int>("SolicitudID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolicitudID"));

                    b.Property<int?>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int?>("CuidadorID")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracionHoras")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaAceptacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaHoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioServicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("TipoServicio")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SolicitudID");

                    b.HasIndex("ClienteID")
                        .HasDatabaseName("IX_Solicitudes_ClienteID");

                    b.HasIndex("CuidadorID")
                        .HasDatabaseName("IX_Solicitudes_CuidadorID");

                    b.HasIndex("Estado")
                        .HasDatabaseName("IX_Solicitudes_Estado");

                    b.HasIndex("FechaHoraInicio")
                        .HasDatabaseName("IX_Solicitudes_FechaHoraInicio");

                    b.HasIndex("ClienteID", "Estado")
                        .HasDatabaseName("IX_Solicitudes_ClienteID_Estado");

                    b.HasIndex("CuidadorID", "Estado")
                        .HasDatabaseName("IX_Solicitudes_CuidadorID_Estado");

                    b.ToTable("Solicitudes", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Duracion", "DuracionHoras > 0");

                            t.HasCheckConstraint("CHK_Estado", "Estado IN ('Pendiente', 'Aceptada', 'En Progreso', 'Fuera de Tiempo', 'Finalizada', 'Rechazada')");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
